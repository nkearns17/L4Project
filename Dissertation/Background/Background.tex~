\documentclass{article}
\begin{document}
\title{Java Programming Revision Tool}
\author{Nicole Keaarns}
\maketitle
\tableofcontents

\newpage

\section{Background}

This section discusses several different existing artifacts, most relating to Java programming or another programming language. These tools were selected to provide design ideas for my own Java revision application, focusing on how each tool provides the user with the material to learn.

\subsection{Investigation of Exisiting Artifacts}

There are many methods of learning how to program in a new language and there are a huge number of applications available to teach users how to do so. I have broken down the exisiting artefacts into several categories, as shown in the image below.\\
\\
\textbf{INSERT DIAGRAM!!!!!!!!}


\subsubsection{Static Learning Tools}

\begin{itemize}
\item Java Puzzler
\item Oracle
\end{itemize}

Java Puzzler, written by Joshua Block and Neal Gafter, is a book containing various puzzles to test the readers ability to identify the correct behaviour of a program. The book provides many puzzles which do not necessarily behave the way they would appear, so the purpose of the book is to look at the snippets of code and try to successfully identify how the code will run. There are very detailed solutions to each problem, which allows the reader to see if they got the correct answer, and if not, provides an in-depth explaination as to why it behaves the way it does. This book is good, in that, it allows the readers to improve their ability to identify problems within code, without having to run it through a compiler. However, it does not necessarily improve on the readers ability to write Java code, as they are simply looking at small snippets of code in order to identify it's behaviour.\\  
\\
Oracle, an online website, provides static, online tutorials for learning Java. Oracle provides many different topics in which the reader can work their way through at their own speed. It provides a very simple interface, using simple 'Next' and 'Back' buttons to navigate through the different tutorials. There is also a simple menu displayed down the left-hand side of the page, which will allow the user to change to another tutorial at any time. This is udeful as it allows users to work at their own pace and means that they don't have to work through the tutorials from start to finish. The only disadvantage of using static, online tutorials is that it provides no way for users to practice writing Java code, they cannot put into practice directly within Oracle the concepts and syntax they are learning.\\

\subsubsection{Interactive Tools}

\textbf{\underline{Guided Walkthroughs:}}\\

\begin{itemize}
\item Code Avengers
\item CodeCademy
\item Learn Java Online
\item TryRuby
\end{itemize}

\textbf{INSERT IMAGES HERES!!!!!}\\

Code Avengers is an online resource for learning how to program games, application and websites using HTML, CSS and Javascript. Although this resource is not suitable for Java, it provides effective means of teaching and learning other programming languages. Code Avengers provides a lot of visual feedback which is useful to the user as it allows them to see exactly what is happening. When a user selects a tutorial which they want to do, a pop-up box is displayed, highlighting all important areas and buttons within the tutorial, for example, the 'Run' button.  The interface is very clear and simple. As shown above, the page is split into three sections: the task instructions are provided at the top of the page, the middle section is the code editor in which the user will edit and write their code, and the third is the results box which will display the output of the program. There is a small toolbar along the bottom of the page which indicates to the the user which lesson they are on and how far they are through that lesson, and allows the user to jump to different lessons. This could be very useful as it will allow the user to work through the lessons at their own pace and not have to work through every single lesson and task. However, I don't think it is very visible, it blends in to the bottom of the screen. I think if this was to be made more bold, or even displayed as a menu down the left or right hand side would be more obvious to the users, and more useful.\\

\textbf{INSERT IMAGES HERES!!!!!}\\

Codecademy is an interactive, online tool for learning how to program using many jQuery, javaScript, PHP, Python and Ruby. Although this resource does not provide material for Java, the methods used for teaching are very effective. The interface is very clear and simple, making it easy for novice users to navigate through the webpage. When a user selects a language in which they want to learn, they are then provided with a list of all the topics available, which is useful as it allows the users to work at their own pace and start where they think necessary. Codecademy provides the user with visual feedback which is useful as it allows the user to see what is happening as they work, they can see how the application responds. For example, when the user is working through the tutorial, if they try to submit code which has errors, a red error message is displayed on the screen, stating where the error is and what type of error has been made. Within each topic, pop-up boxes are used in order to highlight important tasks and areas, allowing the user to become familiar with the interface. Within each topic, there is a small drop-down menu which allows the user to navigate between the different tutorials within that topic. This is useful is it allows the user to progress at their own pace, and prevents them from having to complete tutorials which they may find too easy. One disadvantage with the layout of the tutorials is that the information and instruction panel on the left is slightly small. This means that if a tutorial is quite lengthy, the user has to continually scroll through the panel in order to see all instructions.\\

\textbf{INSERT IMAGES HERES!!!!!}\\

Learn Java Online, an online, interactive Java tutorial application, allows users to work through the provided tutorials in order to improve or practice writing Java. There is contents table provided on the home page which allows the user to select which tutorial they wish to complete. This is good as it means the user doesn't have to start from the first tutorial and complete them all, they can start where they want. The interface is very simple. There are simple buttons provided to run the code and reset it to the original provided code if you feel necessary. There are also simple buttons within the tutorials in order to navigate between them. However, the layout of the webpage is not appealing. As shown in the image above, the screen is split into two sections: the instruction and information section, and the code editor and results box. The code editor and results boxes are static, which is good as it means that it is accessible at all times. However, it is quite small which means that if the code is quite long, the user will have to scroll through the code editor. As the tutorials are very detailed, the information does not fit into the section provided, meaning the user to have to scroll through the tutorials as they can't see all information at once. The interface provides visual feedback, to an extent. When a user runs a program, the results box displays "Executing... Please wait.", letting the user know that it is compiling the code. However, it runs quite slow, and if there's an error within the code, it doesn't immediately tell the user, it continues to display the "Executing... Please wait." message.\\

\textbf{INSERT IMAGES HERE!!!!!}\\

TryRuby, an interactive, online tutorial, provides users with a guided-walkthough to learn to program using Ruby. The interface is very clear and simple. As shown in the image above, the interface is split into two sections: the tutorial information and the code editor. There is a small box on the bottom of the code editor, which provides the user with shortcuts and commands on how to skip between different tutorials. This is not a very clear way for users to skip between lessons, if they had been 'Next' and 'Back' buttons this would make it easier and simpler for users to navigate between tutorials. Once you have started a tutorial, there is no simple way to change to another tutorial without having to repeatedly type in 'next' or go back to the main menu, outwith the current tutorial the user is working on. The interface provides the user with visual feedback which is helpful as it allows the user to see exactly what happens as they interact with the system. For example, if you enter the correct code, "Success!" is displayed on the screen in green letters, indicating that you have correctly ccompleted the task, and if the user enters code which contains errors, a red error message is displayed on the screen.\\

\textbf{\underline{Free-Form Tools:}}\\

\begin{itemize}
\item GroovyConsole
\item Compile Online
\end{itemize}

\textbf{INSERT IMAGES HERE!!!!!}\\

Groovy Console is a simple online webpage for sharing and executing Java code. The interface is very clear and simple. It's split into three sections: the top half is the code editor, there is a small section in the middle to display the output of the code entered, and the bottom provides some simple tips and information about the website. The "Console tips" provided in the bottom section of the page do not stand out from the website information, meaning that users may skip over this information, thinking that its not important. There are simple buttons provided to run the code, clear the current code to display an empty editor, publish the code in the editor and view recent code which others have written. The code editor can be extended to provide more space which is useful as it allows the user to view their code without having the scroll through it. However, it seems that once you have extended the editor space, you cannot decrease the space again. The cursor sticks to the line and doesn't allow you to move it back up. Also, extending the code editor area now means that if your code is quite long, you have to scroll down in order to see the output of your code. \\


\textbf{INSERT IMAGES HERE!!!!!}\\

Compile Online, simply an online compiler, allows the user to type their code into the editor and run it. It allows for many different programming languages, including Java. The interface is very simple and clear, making it easy for new users to use. It's split into 2 vertical sections: the left-hand side is the editor which allows the users to enter their code, and the right-hand side firstly provides insturctions on how to use Compile online and then will contain the results for the code entered. However, once the user has compiled and ran their code, the information disappears and the user is unable to view this information without having to reload the page. Having vertically split the screen allows the users to have maximum space to view their code and results. There is a simple button just above the editor for compiling and running the code. The button is quite small so it doesn't stand out to the user. 

\subsubsection{Quizzes}

\begin{itemize}
\item Bitesize
\item ProProfs
\item Indiabix
\end{itemize}

\textbf{INSERT IMAGES HERE!!!!!}\\

Bitesize is an online revision tool provided by the BBC in order to help high school students revise for their exams. Bitesize provides different revision notes and topic tests for each subject. The tests provided for each topic generally consist of upto 10 multiple choice questions. The interface is very simple and clear, making it easy for new students to become familiar with it. All questions are presented to the user on the one page which allows the user to skip a question and come back to it if they are unsure. However, this also means that the user has to scroll through all questions which can become tedious. There is a simple button at the bottom of the quiz which the user can click when they are finished in order to see how well they have completed the test. The interface provides visual feedback to the user, making it clear their interactions with the system. For example, when a user selects and answer for a question, a small dot appears inside to the radio button to indicate which answer has been selected. Also, when the use has completed the test and submitted their answers, a green tick appears if the answer was correct and a red cross if the answer was incorrect. This is an effective way to indicate how the user has done, as both the colours and symbols effectively show if the answer was right or wrong.\\

\textbf{INSERT IMAGES HERE!!!!!}\\

ProProfs is an online application for creating tools\\

\textbf{INSERT IMAGES HERE!!!!!}\\

Indiabix \\

\subsubsection{Community-based Support}

\begin{itemize}
\item Java Programming Community
\item StackOverflow
\item Wikipedia
\end{itemize}

\textbf{INSERT IMAGES HERE!!!!!}\\

Java Programming Community is a community-based forum for Java programmers from all over the world. The forum lets people post questions or problems they are having with their code, answer questions other users may have, or just simply read the problems and solutions. This is effective as it allows users to view similar problems to ones they may be having and may provide them with an answer. The problem with community-based forums is that the information may not be reliable as it is not always true or correct as it is people making suggestions. The interface for Java Programming Community if fairly simple. On the home page, there is a list of many different forums, each showing several different threads which are currently being discussed, allowing the user to pick which forum best suits them. Within a given thread, the interface is simple, it's easy to distinguish between different posts. However, it can look a little crowded, depending on the number of posts. A useful feature within the forums is that they provide a "Related Threads" section which provides similar threads to the current one, which may be useful for users if the current thread does not help them with their query or problem.

\textbf{INSERT IMAGES HERE!!!!!}\\

Stackoverflow, an online forum which allows programmers to post questions or problems they may have which they would like help with. Other users can answer their questions or provide help if they can. 

\end{document}
